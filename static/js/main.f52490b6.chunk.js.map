{"version":3,"sources":["img/cat.png","components/Skills.tsx","components/AppContext.tsx","components/Header.tsx","img/8.png","img/7.png","img/6.png","img/5.png","img/4.png","img/3.png","img/2.png","img/1.png","img/0.png","img/play.png","img/pause.png","img/inputtimer.png","img/finalsettings.png","components/Settings.tsx","components/Timer.tsx","components/Main.tsx","components/Achievements.tsx","components/Donate.tsx","components/Chat.tsx","App.tsx","index.tsx"],"names":["Skills","className","src","Cat","AppContext","createContext","timer","setTimer","workTime","setWorkTime","breakTime","setBreakTime","pizzasCount","setPizzasCount","AppContextProvider","children","useState","timeInterval","setTimeInterval","typeButton","setTypeButton","showSettings","setShowSettings","totalTime","setTotalTime","maxPizza","setMaxPizza","currentPizza","setCurrentPizza","currentBreakTime","setCurrentBreakTime","typeTimer","setTypeTimer","typeTheme","setTypeTheme","Provider","value","Header","useContext","useEffect","document","title","Math","floor","showTutorial","getClass","to","Settings","toggle","changeValue","func","event","target","type","min","max","onChange","onClick","clearInterval","Timer","seconds","toggleShowSettings","input","width","alt","settings","height","Main","intervalHandle","typeTime","setInterval","getMainTheme","eight","seven","six","five","four","three","two","one","zero","play","pause","Achievements","Donate","Chat","App","path","element","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f52490b6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cat.d075afb5.png\";","// // import Skill from './Skill'\r\n// import Timer from './Timer';\r\n// import { AppContext } from './AppContext';\r\n// import { useContext, useEffect } from 'react';\r\n// import { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\n// import 'react-circular-progressbar/dist/styles.css';\r\nimport Cat from '../img/cat.png';\r\n\r\nimport '../styles/Skills.css'\r\n\r\nlet Skills = () => {\r\n//   const { timer, timeInterval} = useContext(AppContext);\r\n\r\n//   useEffect(()=>{\r\n//     if(timer <= 0){\r\n//       clearInterval(timeInterval);\r\n//     } \r\n//   }, [timer]) \r\n  return (\r\n    <div className=\"blankPage\">\r\n      <p>This webpage is not<br/> available.<br/>\r\n         We are sorry for this<br/> inconvenience</p>\r\n      <img src={Cat}></img>\r\n    </div>\r\n  )\r\n}\r\n    // <div className='SkillsElements'>\r\n    //   <Timer seconds={timer} />\r\n    //   <div className=\"links\">\r\n    //     <div style={{ width: 200, height: 200 }}>\r\n    //       <CircularProgressbar \r\n    //       value={66} \r\n    //       text={`2`}\r\n    //       styles={buildStyles({\r\n    //         trailColor: '#d6d6d6',\r\n    //         pathColor: `orange`,\r\n    //       })}\r\n    //       /><span>Программирование</span>\r\n    //     </div>\r\n    //     <div style={{ width: 200, height: 200 }}>\r\n    //       <CircularProgressbar \r\n    //       value={66} \r\n    //       text={`3`}\r\n    //       styles={buildStyles({\r\n    //         trailColor: '#d6d6d6',\r\n    //         pathColor: `red`,\r\n    //       })}\r\n    //       /><span>Английский</span>\r\n    //     </div>\r\n    //     <div style={{ width: 200, height: 200 }}>\r\n    //       <CircularProgressbar \r\n    //       value={66} \r\n    //       text={`7`}\r\n    //       styles={buildStyles({\r\n    //         trailColor: '#d6d6d6',\r\n    //         pathColor: `blue`,\r\n    //       })}\r\n    //       /><span>Хуепинание</span>\r\n    //     </div>\r\n    //     <div style={{ width: 200, height: 200 }}>\r\n    //       <CircularProgressbar \r\n    //       value={66} \r\n    //       text={`1`}\r\n    //       styles={buildStyles({\r\n    //         trailColor: '#d6d6d6',\r\n    //         pathColor: `rgb(5, 255, 5)`,\r\n    //       })}\r\n    //       /><span>Чистить Картошку</span>\r\n    //     </div>\r\n    //     <div className='skillBlock' style={{ width: 200, height: 200 }}>\r\n    //       <CircularProgressbar \r\n    //       value={66} \r\n    //       text={`25`}\r\n    //       styles={buildStyles({\r\n    //         trailColor: '#d6d6d6',\r\n    //         pathColor: `#3e98c7;`,\r\n            \r\n    //       })}\r\n    //       /><span>Шарю в мемах</span>\r\n    //     </div>\r\n    //       <button className='buttonAdd'>\r\n    //         +\r\n    //       </button>\r\n    //   </div> \r\n    // </div>\r\n\r\n\r\nexport default Skills;","import { createContext, useState } from 'react'\r\n\r\nexport const AppContext = createContext<any>(\r\n  { \r\n    timer: 1800, setTimer: () => { }, \r\n    workTime: 30, setWorkTime: () => { },\r\n    breakTime: 5, setBreakTime: () => { },\r\n    pizzasCount: 4, setPizzasCount: () => { },\r\n  });\r\n  \r\n \r\nexport const AppContextProvider: React.FC = ({ children }: any) => {\r\n  const [timer, setTimer] = useState<number>(1800);\r\n  const [timeInterval, setTimeInterval] = useState<Function>();\r\n  const [typeButton, setTypeButton] = useState<boolean>(true);\r\n  const [showSettings, setShowSettings] = useState<boolean>(false);\r\n  const [totalTime, setTotalTime] = useState(timer);\r\n  const [maxPizza, setMaxPizza] = useState<number>(4);\r\n  const [workTime, setWorkTime] = useState<number>(30);\r\n  const [breakTime, setBreakTime] = useState<number>(5);\r\n  const [pizzasCount, setPizzasCount] = useState<number>(4);\r\n  const [currentPizza, setCurrentPizza] = useState<number>(1);\r\n  const [currentBreakTime, setCurrentBreakTime] = useState<number>(300);\r\n  const [typeTimer, setTypeTimer] = useState<boolean>(true);\r\n  const [typeTheme, setTypeTheme] = useState<string>('in Waiting');\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        timer, setTimer,\r\n        typeButton, setTypeButton,\r\n        timeInterval, setTimeInterval,\r\n        showSettings, setShowSettings,\r\n        totalTime, setTotalTime,\r\n        maxPizza, setMaxPizza,\r\n        workTime, setWorkTime,\r\n        breakTime, setBreakTime,\r\n        pizzasCount, setPizzasCount,\r\n        currentPizza, setCurrentPizza,\r\n        typeTimer, setTypeTimer,\r\n        currentBreakTime, setCurrentBreakTime,\r\n        typeTheme, setTypeTheme,\r\n      }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  )\r\n}","import { NavLink } from 'react-router-dom';\nimport '../styles/Header.css';\nimport { AppContext } from './AppContext';\nimport { useContext, useEffect, useState } from 'react';\n\nlet Header: React.FC = () => {\n\n  const { timer, typeTheme } = useContext(AppContext);\n  useEffect(() => {\n    document.title = `PizzaTimer ${timer / 60 < 10 ? '0' : ''}${Math.floor(timer / 60)}:${timer % 60 < 10 ? '0' : ''}${timer % 60}\n    ${typeTheme}`;\n  }, [timer]);\n\n  const [showTutorial, setShowTutorial] = useState(false);\n\n  // useEffect(()=>{\n  //   setTimeout(()=>setShowTutorial(true), 2000);\n  // },[])\n\n  function getClass(){\n    switch(typeTheme){\n      case 'WorkTime':\n        return 'headerWork';\n      case 'BreakTime':\n        return 'headerBreak';\n      default:\n        return 'headerDefault';\n    }\n  }\n\n  return (\n    <nav className={getClass()}>\n      {showTutorial && <div className='tutorialWrapper'>\n        <div className='tutorialBlock'>\n          <h5 className='center'>Welcome</h5>\n        </div>\n      </div>}\n      <span className='logo'><NavLink className='links' to='/TimeToEat/'>PizzaTimer</NavLink></span>\n      <ul className='menu'>\n        <li><NavLink className='links' to='/Skills'>Skills</NavLink></li>\n        <li><NavLink className='links' to='/Achievements'>Achievements</NavLink></li>\n        <li><NavLink className='links' to='/Chat'>Chat</NavLink></li>\n        <li><NavLink className='links' to='/Donate'>Donate</NavLink></li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/8.af2a9c0a.png\";","export default __webpack_public_path__ + \"static/media/7.13acf0d9.png\";","export default __webpack_public_path__ + \"static/media/6.6e6228d6.png\";","export default __webpack_public_path__ + \"static/media/5.b1e568b0.png\";","export default __webpack_public_path__ + \"static/media/4.be5d0d5c.png\";","export default __webpack_public_path__ + \"static/media/3.0cc82694.png\";","export default __webpack_public_path__ + \"static/media/2.3a7758c2.png\";","export default __webpack_public_path__ + \"static/media/1.65919805.png\";","export default __webpack_public_path__ + \"static/media/0.0a27cba2.png\";","export default __webpack_public_path__ + \"static/media/play.da6c9efa.png\";","export default __webpack_public_path__ + \"static/media/pause.2cceedba.png\";","export default __webpack_public_path__ + \"static/media/inputtimer.0e136523.png\";","export default __webpack_public_path__ + \"static/media/finalsettings.1b21134b.png\";","import { useContext } from 'react';\r\nimport { AppContext } from './AppContext';\r\n\r\ninterface SettingsProps {\r\n  toggle: any;\r\n}\r\n\r\nfunction Settings({ toggle }: SettingsProps) {\r\n\r\n  const {\r\n    workTime, setWorkTime,\r\n    breakTime, setBreakTime,\r\n    pizzasCount, setPizzasCount,\r\n    setTimer, setTotalTime,\r\n    setTypeButton, timeInterval,\r\n    setMaxPizza, setCurrentBreakTime, setTypeTheme\r\n  } = useContext<any>(AppContext);\r\n\r\n  \r\n  const changeValue = (func: any, event: any,) => {\r\n    func(() => event.target.value)\r\n  }\r\n\r\n  const saveSettings = () => {\r\n    toggle();\r\n    setTimer(workTime * 60);\r\n    setTotalTime(workTime * 60);\r\n    setTypeButton(true);\r\n    clearInterval(timeInterval);\r\n    setMaxPizza(+pizzasCount);\r\n    setCurrentBreakTime(breakTime * 60);\r\n    setTypeTheme('in Waiting');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='popUp'>\r\n        <div className='settings-content'>\r\n          <h1 className='headers'>Work Time</h1>\r\n          <span className='label-input'>{workTime} minutes</span>\r\n          <input\r\n            type='range' min={1} max={90}\r\n            value={workTime}\r\n            onChange={(event) => changeValue(setWorkTime, event)}\r\n          />\r\n          <h1 className='headers'>Break Time</h1>\r\n          <span className='label-input'>{breakTime} minutes</span>\r\n          <input\r\n            type='range' min={5} max={20}\r\n            value={breakTime}\r\n            onChange={(event) => changeValue(setBreakTime, event)}\r\n          />\r\n          <h1 className='headers'>Pizza's Count</h1>\r\n          <span className='label-input'>{pizzasCount} pizza's</span>\r\n          <input\r\n            type='range' min={1} max={10}\r\n            value={pizzasCount}\r\n            onChange={(event) => changeValue(setPizzasCount, event)}\r\n          />\r\n          <button className='saveSettingsButton' onClick={saveSettings}><span>Save</span></button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Settings;\r\n","import input from './../img/inputtimer.png';\r\nimport settings from './../img/finalsettings.png';\r\nimport Settings from './Settings';\r\nimport { useContext } from 'react';\r\nimport { AppContext } from './AppContext';\r\n\r\ninterface TimerProps{\r\n  seconds: number;\r\n}\r\n\r\n\r\nfunction Timer({ seconds }: any) {\r\n  const { showSettings, setShowSettings, \r\n    maxPizza, currentPizza , \r\n    typeTimer, typeTheme } = useContext<any>(AppContext);\r\n  const toggleShowSettings = () => {\r\n    setShowSettings((toggle: boolean) => !toggle)\r\n  }\r\n \r\n  \r\n  return (\r\n    <div className='timerTwo'>\r\n      <img className='timeinput' src={input} width={290} alt='input'></img>\r\n      <div className='topBlock'>\r\n        <span>{currentPizza}/{maxPizza}</span>\r\n        <span>{typeTheme}</span>\r\n      </div>\r\n      <div className='times'>\r\n        {`${seconds / 60 < 10 ? '0' : ''}${Math.floor(seconds / 60)} : \r\n           ${seconds % 60 < 10 ? '0' : ''}${seconds % 60}`}\r\n      </div>\r\n      <div className='settings'>\r\n        <img src={settings} onClick={toggleShowSettings} height={42} />\r\n      </div>\r\n      {showSettings && <Settings toggle={toggleShowSettings}/>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Timer;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport eight from \"./../img/8.png\";\r\nimport seven from \"./../img/7.png\";\r\nimport six from \"./../img/6.png\";\r\nimport five from \"./../img/5.png\";\r\nimport four from \"./../img/4.png\";\r\nimport three from \"./../img/3.png\";\r\nimport two from \"./../img/2.png\";\r\nimport one from \"./../img/1.png\";\r\nimport zero from \"./../img/0.png\";\r\n\r\nimport play from './../img/play.png';\r\nimport pause from './../img/pause.png';\r\nimport { AppContext } from './AppContext'\r\nimport Timer from './Timer';\r\n\r\nimport '../styles/Main.css';\r\n\r\nlet Main: React.FC = () => {\r\n\r\n  const { timer, setTimer } = useContext<any>(AppContext)\r\n  const { timeInterval, setTimeInterval } = useContext<any>(AppContext);\r\n  const { typeButton, setTypeButton } = useContext<any>(AppContext);\r\n  const { totalTime, } = useContext<any>(AppContext);\r\n  const { maxPizza } = useContext<any>(AppContext);\r\n  const { currentPizza, setCurrentPizza } = useContext<any>(AppContext);\r\n  const { typeTimer, setTypeTimer } = useContext<any>(AppContext);\r\n  const { currentBreakTime } = useContext<any>(AppContext);\r\n  const { typeTheme, setTypeTheme} = useContext<any>(AppContext);\r\n  let intervalHandle:any = null;\r\n  \r\n  useEffect(()=>{\r\n    if(typeTimer && timeInterval && !typeButton){\r\n      setTypeTheme('WorkTime');\r\n    }\r\n  }, [typeTimer, typeButton]);\r\n\r\n  function getMainTheme(){\r\n    switch(typeTheme){\r\n      case 'WorkTime':\r\n        return 'mainWork';\r\n      case 'BreakTime':\r\n        return 'mainBreak';\r\n      default:\r\n        return 'mainDefault';\r\n    }\r\n  }\r\n \r\n  useEffect(() => {\r\n    \r\n    if (timer <= 0 && typeTimer) {\r\n      setTypeTimer((typeTime: any) => !typeTime);\r\n      setTimer(currentBreakTime);\r\n      setTypeTheme('BreakTime');\r\n      toggle();\r\n    }\r\n    else if (timer <= 0 && !typeTimer) {\r\n      setTypeTheme('in Waiting');\r\n      clearInterval(timeInterval);\r\n      setTypeTimer((typeTime: any) => !typeTime);\r\n      setTypeButton((typeButton: boolean) => !typeButton);\r\n      setTimer(totalTime);\r\n      if (currentPizza != maxPizza) {\r\n        setCurrentPizza((value: number) => value + 1);\r\n      }\r\n      else if(currentPizza === maxPizza){\r\n        setCurrentPizza(1);\r\n      }\r\n    }\r\n  }, [timer]);\r\n\r\n  function checkSrcBreak() {\r\n    if (timer === currentBreakTime) {\r\n      return zero;\r\n    }\r\n    else if (timer < currentBreakTime && timer > (currentBreakTime / 7) * 6) {\r\n      return one;\r\n    }\r\n    else if (timer <= (currentBreakTime / 7) * 6 && timer > (currentBreakTime / 7) * 5) {\r\n      return two;\r\n    }\r\n    else if (timer <= (currentBreakTime / 7) * 5 && timer > (currentBreakTime / 7) * 4) {\r\n      return three;\r\n    }\r\n    else if (timer <= (currentBreakTime / 7) * 4 && timer > (currentBreakTime / 7) * 3) {\r\n      return four;\r\n    }\r\n    else if (timer <= (currentBreakTime / 7) * 3 && timer > (currentBreakTime / 7) * 2) {\r\n      return five;\r\n    }\r\n    else if (timer <= (currentBreakTime / 7) * 2 && timer > (currentBreakTime / 7) * 1) {\r\n      return six;\r\n    }\r\n    else if (timer <= (currentBreakTime / 7) * 1 && timer > (currentBreakTime / 7) * 0) {\r\n      return seven;\r\n    }\r\n    else if (timer === 0) {\r\n      return eight;\r\n    }\r\n  }\r\n\r\n  function checkSrcWork() {\r\n    if (timer === totalTime) {\r\n      return eight;\r\n    }\r\n    else if (timer < totalTime && timer > (totalTime / 7) * 6) {\r\n      return seven;\r\n    }\r\n    else if (timer <= (totalTime / 7) * 6 && timer > (totalTime / 7) * 5) {\r\n      return six;\r\n    }\r\n    else if (timer <= (totalTime / 7) * 5 && timer > (totalTime / 7) * 4) {\r\n      return five;\r\n    }\r\n    else if (timer <= (totalTime / 7) * 4 && timer > (totalTime / 7) * 3) {\r\n      return four;\r\n    }\r\n    else if (timer <= (totalTime / 7) * 3 && timer > (totalTime / 7) * 2) {\r\n      return three;\r\n    }\r\n    else if (timer <= (totalTime / 7) * 2 && timer > (totalTime / 7) * 1) {\r\n      return two;\r\n    }\r\n    else if (timer <= (totalTime / 7) * 1 && timer > (totalTime / 7) * 0) {\r\n      return one;\r\n    }\r\n  }\r\n\r\n  const toggle = () => { \r\n    if (timer <= 0) {\r\n      return;\r\n    }\r\n    setTypeButton(!typeButton);\r\n    if (!!typeButton) {\r\n      intervalHandle = setInterval<any>(() => (setTimer((timer: number) => timer - 1)), 1000)\r\n      setTimeInterval(intervalHandle)\r\n    } else {\r\n      clearInterval(timeInterval);\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <div className={getMainTheme()}>\r\n      <Timer seconds={timer} />\r\n      <img className='pizza' src={typeTimer ? checkSrcWork() : checkSrcBreak()} alt='какая-то' />\r\n      <div className='playblock'>\r\n        <img\r\n          className='play'\r\n          src={typeButton ? play : pause}\r\n          alt='какая-то'\r\n          onClick={toggle} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Main;","import Cat from '../img/cat.png';\r\n\r\n\r\nfunction Achievements() {\r\n  return (\r\n    <div className=\"blankPage\">\r\n      <p>This webpage is not<br/> available.<br/>\r\n         We are sorry for this<br/> inconvenience</p>\r\n      <img src={Cat}></img>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Achievements;","import Cat from '../img/cat.png';\r\n\r\nfunction Donate() {\r\n  return (\r\n    <div className=\"blankPage\">\r\n      <p>This webpage is not<br/> available.<br/>\r\n         We are sorry for this<br/> inconvenience</p>\r\n      <img src={Cat}></img>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Donate;\r\n","import Cat from '../img/cat.png';\r\n\r\nfunction Chat() {\r\n  return (\r\n    <div className=\"blankPage\">\r\n      <p>This webpage is not<br /> available.<br />\r\n        We are sorry for this<br /> inconvenience</p>\r\n      <img src={Cat}></img>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Chat;\r\n","import { BrowserRouter, Route, Routes } from 'react-router-dom';\r\nimport Skills from './components/Skills';\r\nimport Header from './components/Header';\r\nimport Main from './components/Main';\r\nimport Achievements from './components/Achievements';\r\nimport Donate from './components/Donate';\r\nimport Chat from './components/Chat';\r\nimport React from 'react';\r\n\r\n\r\nconst App: React.FC = () =>{\r\n \r\n  return (\r\n      <BrowserRouter>\r\n        <Header />\r\n        <Routes>\r\n          <Route path='/TimeToEat/' element={<Main />} />\r\n          <Route path='/Skills' element={<Skills />} />\r\n          <Route path='/Achievements' element={<Achievements />} />\r\n          <Route path='/Chat' element={<Chat />} />\r\n          <Route path='/Donate' element={<Donate />} />\r\n        </Routes>\r\n      </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\nimport './styles/Error.css';\nimport { AppContextProvider } from './components/AppContext';\n\n\nReactDOM.render(\n    <AppContextProvider>\n        <App />\n    </AppContextProvider>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}